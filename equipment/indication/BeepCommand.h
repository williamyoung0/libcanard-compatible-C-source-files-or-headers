/*
 * UAVCAN data structure definition for libcanard.
 *
 * Autogenerated, do not edit.
 *
 * Source file: E:\DSDL\libcanard\dsdl_compiler\pyuavcan\uavcan\dsdl_files\uavcan\equipment\indication\1080.BeepCommand.uavcan
 */

#ifndef __UAVCAN_EQUIPMENT_INDICATION_BEEPCOMMAND
#define __UAVCAN_EQUIPMENT_INDICATION_BEEPCOMMAND

#include <stdint.h>
#include "canard.h"

#ifdef __cplusplus
extern "C"
{
#endif

/******************************* Source text **********************************
#
# Nodes that are capable of producing sounds should obey.
#

float16 frequency  # Hz
float16 duration   # Sec
******************************************************************************/

/********************* DSDL signature source definition ***********************
uavcan.equipment.indication.BeepCommand
saturated float16 frequency
saturated float16 duration
******************************************************************************/

#define UAVCAN_EQUIPMENT_INDICATION_BEEPCOMMAND_ID         1080
#define UAVCAN_EQUIPMENT_INDICATION_BEEPCOMMAND_NAME       "uavcan.equipment.indication.BeepCommand"
#define UAVCAN_EQUIPMENT_INDICATION_BEEPCOMMAND_SIGNATURE  (0xBE9EA9FEC2B15D52ULL)

#define UAVCAN_EQUIPMENT_INDICATION_BEEPCOMMAND_MAX_SIZE   ((32 + 7)/8)

// Constants

typedef struct
{
    // FieldTypes
    float      frequency;                     // float16 Saturate
    float      duration;                      // float16 Saturate

} uavcan_equipment_indication_BeepCommand;

extern
uint32_t uavcan_equipment_indication_BeepCommand_encode(uavcan_equipment_indication_BeepCommand* source, void* msg_buf);

extern
int32_t uavcan_equipment_indication_BeepCommand_decode(const CanardRxTransfer* transfer, uint16_t payload_len, uavcan_equipment_indication_BeepCommand* dest, uint8_t** dyn_arr_buf);

extern
uint32_t uavcan_equipment_indication_BeepCommand_encode_internal(uavcan_equipment_indication_BeepCommand* source, void* msg_buf, uint32_t offset, uint8_t root_item);

extern
int32_t uavcan_equipment_indication_BeepCommand_decode_internal(const CanardRxTransfer* transfer, uint16_t payload_len, uavcan_equipment_indication_BeepCommand* dest, uint8_t** dyn_arr_buf, int32_t offset);

#ifdef __cplusplus
} // extern "C"
#endif
#endif // __UAVCAN_EQUIPMENT_INDICATION_BEEPCOMMAND