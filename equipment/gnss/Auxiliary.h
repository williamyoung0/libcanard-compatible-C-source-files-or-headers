/*
 * UAVCAN data structure definition for libcanard.
 *
 * Autogenerated, do not edit.
 *
 * Source file: E:\DSDL\libcanard\dsdl_compiler\pyuavcan\uavcan\dsdl_files\uavcan\equipment\gnss\1061.Auxiliary.uavcan
 */

#ifndef __UAVCAN_EQUIPMENT_GNSS_AUXILIARY
#define __UAVCAN_EQUIPMENT_GNSS_AUXILIARY

#include <stdint.h>
#include "canard.h"

#ifdef __cplusplus
extern "C"
{
#endif

/******************************* Source text **********************************
#
# GNSS low priority auxiliary info.
# Unknown DOP parameters should be set to NAN.
#

float16 gdop
float16 pdop
float16 hdop
float16 vdop
float16 tdop
float16 ndop
float16 edop

uint7 sats_visible                    # All visible sats of all available GNSS (e.g. GPS, GLONASS, etc)
uint6 sats_used                       # All used sats of all available GNSS
******************************************************************************/

/********************* DSDL signature source definition ***********************
uavcan.equipment.gnss.Auxiliary
saturated float16 gdop
saturated float16 pdop
saturated float16 hdop
saturated float16 vdop
saturated float16 tdop
saturated float16 ndop
saturated float16 edop
saturated uint7 sats_visible
saturated uint6 sats_used
******************************************************************************/

#define UAVCAN_EQUIPMENT_GNSS_AUXILIARY_ID                 1061
#define UAVCAN_EQUIPMENT_GNSS_AUXILIARY_NAME               "uavcan.equipment.gnss.Auxiliary"
#define UAVCAN_EQUIPMENT_GNSS_AUXILIARY_SIGNATURE          (0x9BE8BDC4C3DBBFD2ULL)

#define UAVCAN_EQUIPMENT_GNSS_AUXILIARY_MAX_SIZE           ((125 + 7)/8)

// Constants

typedef struct
{
    // FieldTypes
    float      gdop;                          // float16 Saturate
    float      pdop;                          // float16 Saturate
    float      hdop;                          // float16 Saturate
    float      vdop;                          // float16 Saturate
    float      tdop;                          // float16 Saturate
    float      ndop;                          // float16 Saturate
    float      edop;                          // float16 Saturate
    uint8_t    sats_visible;                  // bit len 7
    uint8_t    sats_used;                     // bit len 6

} uavcan_equipment_gnss_Auxiliary;

extern
uint32_t uavcan_equipment_gnss_Auxiliary_encode(uavcan_equipment_gnss_Auxiliary* source, void* msg_buf);

extern
int32_t uavcan_equipment_gnss_Auxiliary_decode(const CanardRxTransfer* transfer, uint16_t payload_len, uavcan_equipment_gnss_Auxiliary* dest, uint8_t** dyn_arr_buf);

extern
uint32_t uavcan_equipment_gnss_Auxiliary_encode_internal(uavcan_equipment_gnss_Auxiliary* source, void* msg_buf, uint32_t offset, uint8_t root_item);

extern
int32_t uavcan_equipment_gnss_Auxiliary_decode_internal(const CanardRxTransfer* transfer, uint16_t payload_len, uavcan_equipment_gnss_Auxiliary* dest, uint8_t** dyn_arr_buf, int32_t offset);

#ifdef __cplusplus
} // extern "C"
#endif
#endif // __UAVCAN_EQUIPMENT_GNSS_AUXILIARY