/*
 * UAVCAN data structure definition for libcanard.
 *
 * Autogenerated, do not edit.
 *
 * Source file: E:\DSDL\libcanard\dsdl_compiler\pyuavcan\uavcan\dsdl_files\uavcan\protocol\CANIfaceStats.uavcan
 */

#ifndef __UAVCAN_PROTOCOL_CANIFACESTATS
#define __UAVCAN_PROTOCOL_CANIFACESTATS

#include <stdint.h>
#include "canard.h"

#ifdef __cplusplus
extern "C"
{
#endif

/******************************* Source text **********************************
#
# Single CAN iface statistics.
#

uint48 frames_tx        # Number of transmitted CAN frames.
uint48 frames_rx        # Number of received CAN frames.
uint48 errors           # Number of errors in the CAN layer.
******************************************************************************/

/********************* DSDL signature source definition ***********************
uavcan.protocol.CANIfaceStats
saturated uint48 frames_tx
saturated uint48 frames_rx
saturated uint48 errors
******************************************************************************/

#define UAVCAN_PROTOCOL_CANIFACESTATS_NAME                 "uavcan.protocol.CANIfaceStats"
#define UAVCAN_PROTOCOL_CANIFACESTATS_SIGNATURE            (0x13B106F0C44CA350ULL)

#define UAVCAN_PROTOCOL_CANIFACESTATS_MAX_SIZE             ((144 + 7)/8)

// Constants

typedef struct
{
    // FieldTypes
    uint64_t   frames_tx;                     // bit len 48
    uint64_t   frames_rx;                     // bit len 48
    uint64_t   errors;                        // bit len 48

} uavcan_protocol_CANIfaceStats;

extern
uint32_t uavcan_protocol_CANIfaceStats_encode(uavcan_protocol_CANIfaceStats* source, void* msg_buf);

extern
int32_t uavcan_protocol_CANIfaceStats_decode(const CanardRxTransfer* transfer, uint16_t payload_len, uavcan_protocol_CANIfaceStats* dest, uint8_t** dyn_arr_buf);

extern
uint32_t uavcan_protocol_CANIfaceStats_encode_internal(uavcan_protocol_CANIfaceStats* source, void* msg_buf, uint32_t offset, uint8_t root_item);

extern
int32_t uavcan_protocol_CANIfaceStats_decode_internal(const CanardRxTransfer* transfer, uint16_t payload_len, uavcan_protocol_CANIfaceStats* dest, uint8_t** dyn_arr_buf, int32_t offset);

#ifdef __cplusplus
} // extern "C"
#endif
#endif // __UAVCAN_PROTOCOL_CANIFACESTATS