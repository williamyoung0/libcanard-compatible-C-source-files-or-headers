/*
 * UAVCAN data structure definition for libcanard.
 *
 * Autogenerated, do not edit.
 *
 * Source file: E:\DSDL\libcanard\dsdl_compiler\pyuavcan\uavcan\dsdl_files\uavcan\navigation\2000.GlobalNavigationSolution.uavcan
 */

#ifndef __UAVCAN_NAVIGATION_GLOBALNAVIGATIONSOLUTION
#define __UAVCAN_NAVIGATION_GLOBALNAVIGATIONSOLUTION

#include <stdint.h>
#include "canard.h"

#ifdef __cplusplus
extern "C"
{
#endif

#include <uavcan\Timestamp.h>

/******************************* Source text **********************************
#
# Inertial data and orientation in body frame with fused location.
#
# Fields marked as optional should be set to NaN if the corresponding value is unknown.
#

#
# Global network synchronized timestamp, if known.
# Set to zero if the timestamp is not known.
#
uavcan.Timestamp timestamp

#
# Geo location [angular degree].
#
float64 longitude                   # required
float64 latitude                    # required

#
# Height estimates [meter].
#
float32 height_ellipsoid            # Above ellipsoid (required)
float32 height_msl                  # Above the mean sea level (required)
float32 height_agl                  # Above ground level (provided by radar altimeter or LIDAR) (optional)
float32 height_baro                 # Barometric height (optional)

#
# Atmospheric pressure adjusted to sea level [hectopascal].
#
float16 qnh_hpa                     # optional

#
# Rotation quaternion between the NED frame and the body frame.
# Zero rotation corresponds to the following orientation:
#   X facing north
#   Y facing east
#   Z facing down
#
float32[4] orientation_xyzw

#
# Column order:
#   longitude                                   [meter^2]
#   latitude                                    [meter^2]
#   height (MSL or ellipsoid, whichever worse)  [meter^2]
#   roll angle                                  [radian^2]
#   pitch angle                                 [radian^2]
#   yaw angle                                   [radian^2]
#
float16[<=36] pose_covariance

#
# Linear velocity in the body frame, X-Y-Z [meter/second].
#
float32[3] linear_velocity_body

#
# Angular velocity in the body frame, roll-pitch-yaw [radian/second].
#
float32[3] angular_velocity_body

#
# Low resolution estimate of the linear acceleration in the body frame [(meter/second)^2].
# This estimate should be properly downsampled in order to avoid aliasing effects.
#
float16[3] linear_acceleration_body

#
# Column order:
#   X velocity      [(meter/second)^2]
#   Y velocity      [(meter/second)^2]
#   Z velocity      [(meter/second)^2]
#   roll velocity   [(radian/second)^2]
#   pitch velocity  [(radian/second)^2]
#   yaw velocity    [(radian/second)^2]
#
float16[<=36] velocity_covariance
******************************************************************************/

/********************* DSDL signature source definition ***********************
uavcan.navigation.GlobalNavigationSolution
uavcan.Timestamp timestamp
saturated float64 longitude
saturated float64 latitude
saturated float32 height_ellipsoid
saturated float32 height_msl
saturated float32 height_agl
saturated float32 height_baro
saturated float16 qnh_hpa
saturated float32[4] orientation_xyzw
saturated float16[<=36] pose_covariance
saturated float32[3] linear_velocity_body
saturated float32[3] angular_velocity_body
saturated float16[3] linear_acceleration_body
saturated float16[<=36] velocity_covariance
******************************************************************************/

#define UAVCAN_NAVIGATION_GLOBALNAVIGATIONSOLUTION_ID      2000
#define UAVCAN_NAVIGATION_GLOBALNAVIGATIONSOLUTION_NAME    "uavcan.navigation.GlobalNavigationSolution"
#define UAVCAN_NAVIGATION_GLOBALNAVIGATIONSOLUTION_SIGNATURE (0x463B10CCCBE51C3DULL)

#define UAVCAN_NAVIGATION_GLOBALNAVIGATIONSOLUTION_MAX_SIZE ((1860 + 7)/8)

// Constants

#define UAVCAN_NAVIGATION_GLOBALNAVIGATIONSOLUTION_ORIENTATION_XYZW_LENGTH               4
#define UAVCAN_NAVIGATION_GLOBALNAVIGATIONSOLUTION_POSE_COVARIANCE_MAX_LENGTH            36
#define UAVCAN_NAVIGATION_GLOBALNAVIGATIONSOLUTION_LINEAR_VELOCITY_BODY_LENGTH           3
#define UAVCAN_NAVIGATION_GLOBALNAVIGATIONSOLUTION_ANGULAR_VELOCITY_BODY_LENGTH          3
#define UAVCAN_NAVIGATION_GLOBALNAVIGATIONSOLUTION_LINEAR_ACCELERATION_BODY_LENGTH       3
#define UAVCAN_NAVIGATION_GLOBALNAVIGATIONSOLUTION_VELOCITY_COVARIANCE_MAX_LENGTH        36

typedef struct
{
    // FieldTypes
    uavcan_Timestamp timestamp;                     //
    double     longitude;                     // float64 Saturate
    double     latitude;                      // float64 Saturate
    float      height_ellipsoid;              // float32 Saturate
    float      height_msl;                    // float32 Saturate
    float      height_agl;                    // float32 Saturate
    float      height_baro;                   // float32 Saturate
    float      qnh_hpa;                       // float16 Saturate
    float      orientation_xyzw[4];           // Static Array 32bit[4] max items
    struct
    {
        uint8_t    len;                       // Dynamic array length
        float*     data;                      // Dynamic Array 16bit[36] max items
    } pose_covariance;
    float      linear_velocity_body[3];       // Static Array 32bit[3] max items
    float      angular_velocity_body[3];      // Static Array 32bit[3] max items
    float      linear_acceleration_body[3];   // Static Array 16bit[3] max items
    struct
    {
        uint8_t    len;                       // Dynamic array length
        float*     data;                      // Dynamic Array 16bit[36] max items
    } velocity_covariance;

} uavcan_navigation_GlobalNavigationSolution;

extern
uint32_t uavcan_navigation_GlobalNavigationSolution_encode(uavcan_navigation_GlobalNavigationSolution* source, void* msg_buf);

extern
int32_t uavcan_navigation_GlobalNavigationSolution_decode(const CanardRxTransfer* transfer, uint16_t payload_len, uavcan_navigation_GlobalNavigationSolution* dest, uint8_t** dyn_arr_buf);

extern
uint32_t uavcan_navigation_GlobalNavigationSolution_encode_internal(uavcan_navigation_GlobalNavigationSolution* source, void* msg_buf, uint32_t offset, uint8_t root_item);

extern
int32_t uavcan_navigation_GlobalNavigationSolution_decode_internal(const CanardRxTransfer* transfer, uint16_t payload_len, uavcan_navigation_GlobalNavigationSolution* dest, uint8_t** dyn_arr_buf, int32_t offset);

#ifdef __cplusplus
} // extern "C"
#endif
#endif // __UAVCAN_NAVIGATION_GLOBALNAVIGATIONSOLUTION